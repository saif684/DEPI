# -*- coding: utf-8 -*-
"""Phonebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qmlQFaVCtyOQJ1_epan85Vs1UPAPp2x5
"""

# Title: Assignment 3
# Created by: Anas Ismail
# Date: May, 13th 2024

# Please don't change any part of the provided code. Only add new code.
# Please change the file name to be yourId_FirstName_LastName.py

# write your full name
NAME = "Saif islam ahmed"
# write your id as a string
ID = 1110144940

import sys
import os
GRADING_MODE = False # only enable if you know what you are doing

if GRADING_MODE:
    sys.stdin = open('input.txt', 'r')

def init():
    s = "s ahmed ali, 01002271982\nmahmoud samir, 01119237865\nhend ibrahim, 01583637653\nmalak sami, 01112223333\nmalak mostafa, 01212223442\n"
    with open("phonebook.txt", "w") as f:
        f.write(s)


# colors
# https://sentry.io/answers/print-colored-text-to-terminal-with-python/
RED = '\033[31m'
RESET = '\033[0m' # called to return to standard terminal text color
def red_font(s):
    return RED + str(s) + RESET

def help():
    print(f"Press {red_font('e')} to exit")
    print(f"Press {red_font('a')} to add a contact")
    print(f"Press {red_font('d')} to delete a contact")
    print(f"Press {red_font('s')} to save data to file")
    print(f"Press {red_font('l')} to load data from file")
    print(f"Press {red_font('v')} to view all your contacts")
    print(f"Press {red_font('f')} to find the phone number of a given name")
    print(f"Press {red_font('u')} to update the phone number of a given name")
    print(f"Press {red_font('h')} to show help message")
    print(f"Press {red_font('m')} to start over")

def welcome():
    message = f"Welcome to {red_font(NAME)}'s phonebook app"
    n = len(message) - len(NAME)
    print("-"*n)
    print(message)
    print("-"*n)
    help()

def load(filename):
  phonebook = {}
  try:
    with open(filename, "r") as f:
      for line in f:
        name, number = line.strip().split(",")
        phonebook[name] = number
  except FileNotFoundError:
    print("please enter a valid file name: ")
  return phonebook

def save(phonebook, filename):
    with open(filename, "w") as f:
      for name,number in phonebook.items():
        f.write(name + "," + number + "\n")
    print(f"Contacts saved to {filename}.")

def add(phonebook):
  name = input("Please enter the name: ")
  number = input("Pleawse enter the number: ")
  if number in phonebook.values():
    print(f"The number {number} already exists for another contact.")
  else:
    phonebook[name] = number

def update(phonebook):
  name = input("Please enter the name: ")
  if name in phonebook:
    number = input("Please enter the number: ")
    phonebook[name] = number
    print(f"{name}'s phone number is {phonebook[name]}")
  else:
    print(f"{name} is not in the phonebook")

def find(phonebook):
  name = input("Please enter the name: ")
  if name in phonebook:
    print(f"{name}'s phone number is {phonebook[name]}")
  else:
    print(f"Can't find {name} in phonebook")

def delete(phonebook):
  name = input("Enter the name: ")
  if name in phonebook:
    del phonebook[name]
  else:
    print(f"Can't delete {name} in phonebook")

def view(phonebook):
  for name, number in phonebook.items():
    spaces = 30 - len(name)
    print(f"{name}{' ' * spaces}: {number}")

def exit(phonebook):
  print("Exiting the phonebook...")
  try:
    sys.exit()
  except SystemExit:
   pass

def main():
    if GRADING_MODE:
        init()

    # empty phonebook
    phonebook = {}
    global filename
    filename = input("Enter the filename to save your contacts:")

    welcome()
    while True:
        choice = input("> ").lower()
        if choice == "e":
            exit(phonebook)
        elif choice == "l":
            phonebook = load(filename)
        elif choice == "s":
            save(phonebook, filename)
        elif choice == "a":
            add(phonebook)
        elif choice == "f":
            find(phonebook)
        elif choice == "u":
            update(phonebook)
        elif choice == "d":
            delete(phonebook)
        elif choice == "v":
            view(phonebook)
        elif choice == "h":
            help()
        elif choice == "m":
            main()
        else:
            print("invalid input.")
            help()


if __name__ == "__main__":
    main()